name: ROS test workflow

on: [push]

jobs:
  industrial_ci:
    strategy:
      matrix:
        env:
          - { ROS_DISTRO: noetic, ROS_REPO: main}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: "ros-industrial/industrial_ci@master"
        env: ${{ matrix.env }}

  catkin_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros_distribution:
          - noetic

        # Define the Docker image(s) associated with each ROS distribution.
        # The include syntax allows additional variables to be defined, like
        # docker_image in this case. See documentation:
        # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-including-configurations-in-a-matrix-build
        #
        # Platforms are defined in REP 3, and REP 2000:
        # https://ros.org/reps/rep-0003.html
        # https://ros.org/reps/rep-2000.html
        include:
          - docker_image: ros:noetic-ros-base-focal
            ros_distribution: noetic
            ros_version: 1

    container:
      image: ${{ matrix.docker_image }}
    steps:
      - uses: actions/checkout@v3

      - name: Post setup (Noetic)
        run: |
          apt-get update
          apt-get install -y python3-catkin-tools python3-osrf-pycommon python3-vcstool
      - name: Prepare test
        run: |
          apt-get install -y rsync git
          rosdep update --include-eol-distros
          mkdir -p ~/catkin_ws/src
          rsync -av --exclude='.git/' ./ ~/catkin_ws/src/pimouse_ros/
          cd ~/catkin_ws/src
      - name: Run test
        run: |
          . /opt/ros/${{ matrix.ros_distribution }}/setup.sh
          cd ~/catkin_ws
          rosdep install -r -y -i --from-paths .
          catkin init
          catkin build
          catkin run_tests --no-deps pimouse_ros

          bash -xve ${CATKIN_WS}/src/pimouse_ros/test/travis_prepare_dummy_files.bash
          rostest pimouse_ros test.launch
          ls -d ~/catkin_ws/build/pimouse_ros* | xargs -I{} catkin_test_results --verbose {} || exit 1
